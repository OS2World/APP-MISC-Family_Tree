:userdoc.
:title.Family Tree (Online Hilfe)
:docprof ctrlarea=coverpage.
:ctrldef.
:ctrl ctrlid=test coverpage controls='ESC SEARCH PRINT INDEX CONTENTS BACK FORWARD'.
:ectrldef.

.* -------------- Symbol definitions ----------------------.
.nameit symbol=ID_NMainWindow        text=100.
.nameit symbol=ID_NEditWindow        text=150.
.nameit symbol=ID_NListWindow        text=151.
.nameit symbol=ID_NPrintDialog       text=152.
.nameit symbol=ID_NAboutDialog       text=153.
.nameit symbol=ID_NRexxDialog        text=154.
.nameit symbol=ID_NRexxOutput        text=155.
.nameit symbol=ID_NOptionsDialog     text=156.
.nameit symbol=ID_NSearchDialog      text=157.
.nameit symbol=ID_NEventsWindow      text=158.

.nameit symbol=MI_Main               text=1000.
.nameit symbol=MI_MainFile           text=1002.
.nameit symbol=MI_MainView           text=1004.
.nameit symbol=MI_MainHelp           text=1007.

.nameit symbol=MI_FileNew            text=1020.
.nameit symbol=MI_FileOpen           text=1022.
.nameit symbol=MI_FileSave           text=1024.
.nameit symbol=MI_FileSaveAs         text=1026.
.nameit symbol=MI_FileClose          text=1028.
.nameit symbol=MI_FilePrint          text=1030.

.nameit symbol=MI_Mankind            text=1040.
.nameit symbol=MI_MankindAncestors   text=1042.
.nameit symbol=MI_MankindDescendants text=1043.
.nameit symbol=MI_MankindSiblings    text=1044.
.nameit symbol=MI_MankindHori        text=1054.
.nameit symbol=MI_MankindVert        text=1055.
.nameit symbol=MI_MankindList        text=1058.
.nameit symbol=MI_MankindZoomIn      text=1060.
.nameit symbol=MI_MankindZoomOut     text=1062.

.nameit symbol=MI_RexxStart            text=1400.

.nameit symbol=MI_OptionsLayout        text=1450.
.nameit symbol=MI_OptionsDataAssistant text=1451.
.nameit symbol=MI_OptionsMiscellaneous text=1452.
.nameit symbol=MI_OptionsUserFields    text=1453.

.nameit symbol=MI_Man                  text=1070.
.nameit symbol=MI_ManCenter            text=1072.
.nameit symbol=MI_ManEdit              text=1074.
.nameit symbol=MI_ManOrigin            text=1076.
.nameit symbol=MI_ManDel               text=1077.
.nameit symbol=MI_ManDelPartner        text=1078.
.nameit symbol=MI_ManDelChilds         text=1129.
.nameit symbol=MI_ManDelParents        text=1179.
.nameit symbol=MI_ManDelThis           text=1180.
.nameit symbol=MI_ManChild             text=1181.
.nameit symbol=MI_ManChildNew          text=1232.
.nameit symbol=MI_ManChildRemembered   text=1282.
.nameit symbol=MI_ManParents           text=1390.
.nameit symbol=MI_ManPartner           text=1391.
.nameit symbol=MI_ManPartnerNew        text=1392.
.nameit symbol=MI_ManPartnerRemembered text=1393.
.nameit symbol=MI_ManRemember          text=1394.

.* ------------------- winMain --------------------------------.
:h1 id=FamilyTree.Stammbaum
:i1 id=FamilyTree.Stammbaum
:p.Ein Stammbaum besteht aus Menschen, die miteinander verwandt
sind. Im "leeren" Stammbaum befindet sich nur ein Mensch welcher
Ursprung und der Aktuelle ist:
:artwork name='sample1.bmp'.
.*.
WÑhlen Sie vom KontextmenÅ des :link reftype=hd refid=menuMan.Mensch:elink.en
:link reftype=hd refid=menuManPartner.Neuer Partner:elink. und er
bekommt einen Partner:
:artwork name='sample2.bmp'.
.*.
Jetzt kînnen Kinder hinzugefÅgt werden, indem aus dem KontextmenÅ
einer der beiden Menschen
:link reftype=hd refid=menuManChild.Kind hinzufÅgen:elink. ausgewÑhlt wird.
Wenn Sie ein Menschen auswÑhlen, werden Sie bemerken, da· er
den rot-schraffierten Rahmen bekommt - dieser dann der Aktuelle.
:artwork name='sample3.bmp'.
.*.
Eltern fÅr "Adam" sind kein Problem. Selektieren Sie "Adam", indem Sie
auf ihn klicken, und wÑhlen
Sie aus dem KontextmenÅ dieses :link reftype=hd refid=menuMan.Mensch:elink.en
:link reftype=hd refid=menuManParents.Eltern hinzufÅgen:elink..
:artwork name='sample4.bmp'.
.*.
Nicht alle im Stammbaumes werden gleichzeitig gezeigt.
Welche Verwandte gezeigt werden hÑngt davon ab, wer der "Ursprung" ist.
Alle Vorfahren (direkte Linie) und Nachfahren (mit Partner) des "Ursprungs"
werden gezeigt.
(Ausnahme: Sie kînnen die Darstellung des Stammbaumes durch das
:link reftype=hd refid=menuMankind.AnsichtmenÅ:elink. verÑndern).
.*.
:p.Versuchen Sie, "Partner" zum "Ursprung" zu machen, indem Sie auf ihn
doppelklicken oder :link reftype=hd refid=menuManOrigin.Ursprung:elink. aus
seinem KontextmenÅ wÑhlen. Dadurch Ñndert sich die
Farbe von "Partner" zu :color fc=red.rot:color fc=default.
- nun ist er der "Ursprung" des Stammbaumes.
:artwork name='sample5.bmp'.
.*.
Habe Sie gemerkt, da· die Eltern von "Adam" verschwunden sind und nur eine
gepunktete Linie darauf hinwei·t, da· sie vorhanden sind ? Aber nun kînnen
Sie alle Vorfahren von "Partner" sehen, wenn Sie diese hinzufÅgen.
.*.
:p.Machen Sie nun "Kind" zum "Ursprung"
(seine Farbe wechselt zu :color fc=red.rot:color fc=default.)
und fÅgen Sie ein paar BrÅder Åber das KontextmenÅ von "Adam" hinzu:
:artwork name='sample6.bmp'.
.*.
Die BrÅder von "Kind" werden nicht gezeigt, da diese weder Vorfahren
noch Nachfahren von ihm sind.

:p.Versuchen Sie, einen Stammbaum aufzubauen und den "Ursprung"
zu verÑndern. Verstellen Sie die Darstellung
Åber das :link reftype=hd refid=menuMankind.AnsichtmenÅ:elink..
:p.ôffnen sie das :link reftype=hd refid=winList.Listenfenster:elink.,
indem alle Menschen alphabetisch sortiert dargestellt werden.
:p.ôffnen Sie das :link reftype=hd refid=winEdit.Editierfenster:elink.
und Ñndern Sie Eigenschaften, wie Name oder Vorname.

.* ------------------- winMain --------------------------------.
:h1 res=&ID_NMainWindow..Hauptfenster
:i1 id=winMain.Hauptfenster
:p.:hp3.Family Tree:ehp3.
:p.  ... grafische Verwaltung eines Stammbaumes :artwork runin name='FTree.bmp'.
:p.Copyright 1996, 1997 by :link reftype=hd refid=People.Nils Meier:elink.
:note text='Wichtig :'.Bitte lesen Sie :hp1.liesmich.txt:ehp1. fÅr
Verîffentlichungsinformationen !
:p.Dies ist die Starthilfe fÅr Family Tree. Wenn Sie das Programm starten, sehen
sie das Hauptfenster vor sich und gelangen Åber F1 zu dieser Hilfe.
:p.Das Hauptfenster besteht aus einem "wei·en Blatt" mit einem Menschen
"Adam", einer :link reftype=hd refid=toolbar.Buttonleiste:elink. und einem FenstermenÅ.
Das Prinzip eines Stammbaumes wird :link reftype=hd refid=FamilyTree.hier:elink.
erklÑrt.
.*.
:p.Sie kînnen direkt damit beginnen einen Stammbaum einzugeben, indem Sie einen
Menschen auswÑhlen (einfacher Mausklick), das KontextmenÅ des
:link reftype=hd refid=menuMan.Mensch:elink.en aktivieren
(rechter Mausklick) und Aktionen daraus auswÑhlen.
Klicken Sie mit der rechten Maustaste in den Stammbaum auf einen freien Bereich
und das :link reftype=hd refid=menuMankind.AnsichtmenÅ:elink. erscheint.
:p.Wenn Sie mit der linken Maustaste auf den Stammbaum klicken und diese gedrÅckt
halten, kînnen Sie durch Bewegung des Mauszeigers den Stammbaum verschieben.
.*.
:p.öber das :link reftype=hd refid=menuFile.DateimenÅ:elink. kînnen Sie einen
Stammbaum speichern, einladen und drucken.
Das :link reftype=hd refid=menuMankind.AnsichtmenÅ:elink.
ermîglicht es, die Darstellung des Stammbaumes zu verÑndern.
Rexx Skripte, die Berichte erstellen und Im/Exportieren, starten Sie Åber das
:link reftype=hd refid=menuRexxStart.Rexxmenu:elink..
Sie kînnen auch :link reftype=hd refid=rexxing.eigene Rexx-Skripte erstellen:elink..
:p.Sie kînnen den Zoomfaktor des Baumes mit dem Schieberegler in der Buttonleiste
oder durch drÅcken der Tasten +/- verÑndern.
:p.Wenn Sie Programm- oder Baumeinstellungen Ñndern wollen, erreichen Sie
Åber das :link reftype=hd refid=winOptions.OptionsmenÅ:elink.
den :link reftype=hd refid=winOptions.Optionsdialog:elink..
:p.Falls Sie immer den gleichen Stammbaum bearbeiten wollen, geben Sie den Namen auf der
Kommandozeile oder im Parameterfeld des Programmobjektes an, und er wird beim Starten
automatisch eingeladen.
:p.Durch Drag&amp.Drop einer .fam-Datei auf das Hauptfenster kînnen Sie ein
Laden veranlassen.

.* ------------------- toolbar    ------------------------------.
:h1 id=toolbar.Toolbar
:i1.Toolbar
Im Hauptfenster oberhalb des Baumes liegt die Buttonleiste:
:artwork name='Toolbar.bmp'.
Darauf sind mehrere Buttons, die folgendes bewirken:
:ol.
:li.:link reftype=hd refid=treeLoad.Daten laden:elink.
:li.:link reftype=hd refid=treeSave.Daten speichern:elink.
:li.:link reftype=hd refid=treePrint.Daten drucken:elink.
:li.:link reftype=hd refid=winOptions.Optionen verÑndern:elink.
:li.:link reftype=hd refid=winSearch.Suchen:elink.
:lp.
:li.:link reftype=hd refid=menuMankindVert.Vertikale:elink. /
:link reftype=hd refid=menuMankindHori.horizontale:elink. Ansicht
:li.:link reftype=hd refid=menuMankindAncestors.Anzahl der sichtbaren Generationen von Vorfahren einstellen:elink.
:li.:link reftype=hd refid=menuMankindDescendants.Anzahl der sichtbaren Generationen von Nachfahren einstellen:elink.
:li.:link reftype=hd refid=menuMankindSiblings.Ansicht der Geschwister anschalten:elink.
:li.:link reftype=hd refid=menuMankindZoomIn.Rein:elink. /
:link reftype=hd refid=menuMankindZoomOut.raus:elink.zoomen
:lp.
:li.Ort der Buttonleiste (oben/unten) einstellen
:eol.

.* ------------------- winSearch ------------------------------.
:h1 res=&ID_NSearchDialog. id=winSearch.Suchfenster

Diese Funktion ist noch nicht implementiert.

.* ------------------- winOptions ------------------------------.
:h1 res=&ID_NOptionsDialog. id=winOptions.Optionsdialog
:i1.Optionsdialog
:p.Hier kînnen Sie die Optionen von FamilyTree Ñndern. Dazu gibt
es vier Notizbuchseiten mit Optionen fÅr
:ol compact.
:li.Layout
:li.Datenassistent
:li.Verschiedenes
:li.Benutzerfelder
:eol.

:dl compact.
:dt.:hp2.Layout:ehp2.
:dd.Hier kînnen Sie angeben, wie Linien zwischen Menschen aussehen.
Sie kînnen die Detailstufe einstellen, die Schriftart und Farben der
sichtbaren Elemente einstellen.
:dt.:hp2.Datenassistent:ehp2.
:dd.Den Datenassistent beeinflussen Sie hier. AbhÑngig von der
Aktion die Sie durchfÅhren, wie "Neuer Partner", kînnen Sie die
Option "bekommt gleiche Adresse" auswÑhlen, so da· ein neuer
Partner die Adresse des "Aktuellen" bekommt.
:dt.:hp2.Verschiedenes:ehp2.
:dd.Wenn Sie das Datumsformat Ñndern wollen, geben Sie hier einfach
das Format und das Trennzeichen an. Au·erdem kînnen Sie den
automatischen Eingabefocuswechsel aktivieren, so da· nach einem
Mausklick auf eine Person das Editierfenster aktive wird. So kînnen
Sie durch den Baum wandern und brauchen nicht mit der Maus
zum Editierfenster gehen, um Daten zu Ñndern.
:p.Eine andere Sache ist die Option "Versuche relativen Pfad zu speichern".
Wenn diese aktiviert ist, versucht FamilyTree fÅr alle Attachments
einen relative Pfad zu merken. Das bedeutet, da· nach einem Bild-Drop
FamilyTree alle absoluten Pfadinformationen lîscht, wenn dieses
in einem Unterverzeichnes des aktuellen Baumes ist.
FamilyTree warnt dann auch, wenn es keinen relative Pfad berechnen
kann und speichert dann den absoluten Pfad.
:p.Mit "Immer die nicht importierten Personen aufheben" kînnen Sie bestimmen,
da· eventuell Åbriggebliebene Daten nach dem Import immer aufgehoben werden.
So kînnen Sie diese Daten schnell Baum fÅr Baum importieren und werden nicht
jedesmal gefragt. Gro·e Datenmengen brauchen dann allerdings auch viel
Speicherplatz, der bis zum nÑchsten Import belegt ist!
:dt.:hp2.Benutzerfelder:ehp2.
:dd.Hier kînnen Sie eigene Benutzerfelder fÅr Personen definieren
(In der unregistrierten Version kînnen Sie nur 3 eigene Felder erzeugen).
Es gibt momentan vier verschiedene Typen von Feldern:
:ol compact.
:li.Ja/Nein
:li.Text
:li.Zahl
:li.Datum
:eol.
:p.Die Felddefinitionen gehîren zum jeweiligen Stammbaum und werden beim
Speichern mit ihm gesichert.
:edl.

.* ------------------- winEdit ------------------------------.
:h1 res=&ID_NEditWindow. id=winEdit.Editierfenster
:i1.Editierfenster
:p.In diesem Fenster kînnen sie die Eigenschaften des aktuellen Menschen verÑndern.
Es besteht aus fÅnf Seiten:

:artwork name='edit.bmp'.

:ol.
:li.Seite
:p. Die erste Seite enthÑlt mehrere Eingabefelder fÅr verschiedene
personenbezogene Daten. FÅllen Sie sie einfach fÅr die aktuelle
Person aus.

:artwork name='edit1.bmp'.

:p.Wenn Sie eine Tilde (~) in das Vornamenfeld eingeben, wird
der Vorname direkt dahinter der Rufname und im Stammbaum gezeigt.
:p.Sie kînnen Datumsinformationen lîschen, indem Sie :hp1.ESC:ehp1.
drÅcken, wenn der Cursor in einem Datumsfeld ist.
Au·erdem kann ein Datum noch einen Modifikator beinhalten, der
nach einen rechten Mausklick auf das Datum ausgewÑhlt werden kann.
 :p.éndern Sie das Geschlecht einen Menschen, indem Sie auf
den Button mit dem Personensymbol klicken (grau: nicht angegeben, blau: mÑnnlich,
rot: weiblich).
:p.Wenn der Mensch mehrere Partner hat kînnen die Partnerschaften
durchgehen, wenn Sie auf den Knopf neben dem Heiratsfeld klicken.
:p.Ziehen Sie per Drag&amp.Drop ein GIF, BMP oder PCX auf das
Bild oder klicken Sie auf das Bild um einen Pfad zum gewÅnschten
Bild manuell einzugeben.
:warning text='Vorsicht:'.FTree merkt sich nur, wo das Bild
liegt (Die Bilddaten werden nicht gespeichert).
Wird das Bild also spÑter verschoben oder gelîscht, kann
FTree es nicht mehr finden und zeigt ein Fragezeichen.

:li.Seite
:p.Nachdem Sie im :link reftype=hd refid=winOptions.Optionsdialog:elink.
Benutzerfelder fÅr den Baum definiert haben, kînnen Sie hier personenbezogene
Daten, wie hier gezeigt, eingeben:

:artwork name='edit2.bmp'.

:li.Seite
:p.Quellenangaben sind noch nicht implementiert.

:li.Seite
:p.Diese Seite zeigt alle Ereignisse, in denen die aktuelle Person involviert
ist. Erzeugen Sie Ereignisse im :link reftype=hd refid=winEvents.Ereignisfenster:elink.
und fÅgen Sie dies mittels Drag&amp.Drop der aktuellen Person hinzu.
Sie werden anschlie·en nach der Rolle der Person beim Ereignis befragt.
Wenn Sie einen rechten Mausklick auf ein Ereignis durchfÅhren, kînnen Sie die
Beteiligung entfernen, oder die Rolle Ñndern.
Dieses Beispiel zeigt, da· die aktuelle Person auf zwei Geburtstagsfeiern anwesend
war:

:artwork name='edit4.bmp'.

:li.Seite
:p.Auf der letzten Seite kînnen Referenzen zu Dateien gespeichert werden, die im
Zusammenhang zur aktuellen Person stehen.
Wenn Sie zum Beispiel Bilder oder Dokumente haben, ziehen Sie diese einfach per
Drag&amp.Drop hierher.
SpÑter kînnen Sie die Referenzen durch einen rechten Mausklick verÑndern.

:artwork name='edit5.bmp'.

:eol.

.* ------------------- winList ------------------------------.
:h1 res=&ID_NListWindow. id=winList.Listenfenster
:i1.Listenfenster
:p.In diesem Fenster wird eine Liste aller Menschen im Stammbaum angezeigt.
Sie kînnen einen Menschen auswÑhlen und sein KontextmenÅ per rechtem Mausklick
aufklappen.
:artwork name='list.bmp'.
:p.ôffnen Sie das Listenfenster, indem sie Liste aus dem
:link reftype=hd refid=menuMankind.AnsichtmenÅ:elink. wÑhlen.
:p.Durch einen rechten Mausklick auf einen freien Bereich oder
die Spaltenkîpfe erscheint ein MenÅ mit einer Auswahl.
Mit dieser kînnen Sie die Sortierkriterien verÑndern.
Wenn Sie nur nach einem Kriterium (z.B. Name) sortieren
mîchten, klicken Sie einfach auf den entsprechenden Spaltenkopf.

.* ------------------- winEvents -----------------------------------.
:h1 res=&ID_NEventsWindow. id=winEvents.Ereignisfenster
Dieses Fenster enthÑlt eine Liste aller Ereignisse des Baumes.
:artwork name='events.bmp'.
:p.Sie kînnen das aktuelle Ereignis mittels der Seiten auf der
rechten Seite Ñndern. Ein Ereignis besteht aus drei Seiten von Daten:

:ol.
:li.Seite
:p.Die erste Seite enthÑlt mehrere Eingabefelder fÅr verschiedene
Informationen Åber das aktuelle Ereignis. Geben Sie einfach die
Ereignisdaten hier ein:

:artwork name='events1.bmp'.

:li.Seite
:p.Ziehen Sie eine Person aus dem Baum oder der Liste mittels Drag&amp.Drop
hierher. Sie werden dann nach der Rolle dieser Person bei dem Ereignis
befragt.
Wenn Sie mit der rechten Maus auf eine Person in der Liste klicken, kînnen
Sie dessen Beteiligung Ñndern.

:artwork name='events2.bmp'.

:li.Seite
:p.Die letzte Seite speichert Quellenverweise, die das Ereignis belegen
(z.B. eine Referenz auf ein Schiffsregister bzgl. einer Auswanderung).
Diese Funktion ist noch nicht implementiert.

:eol.


.* ------------------- winPrint ------------------------------.
:h1 res=&ID_NPrintDialog. id=winPrint.Druckdialog
:i1.Druckdialog
:p.Zu diesem Dialog gelangen Sie, indem Sie aus dem MenÅ den
Punkt :hp1.Drucken:ehp1. wÑhlen.
:p.Hier kînnen Sie vor dem Drucken den gewÅnschten :hp1.Drucker:ehp1.,
auswÑhlen und Ausdruckparameter einstellen.
:artwork name='print1.bmp'.
:p.Klicken sie auf :hp1.Angepa·t:ehp1. so kînnen sie in den Seitenfeldern
die gewÅnschte Seitenanzahl einstellen. Der Stammbaum wird auf dieses
Ma· vergrî·ert oder verkleinert.
:artwork name='print2.bmp'.
:p.Ist :hp1.Angepa·t:ehp1. nicht ausgewÑhlt, so kînnen Sie mit dem
Schieberegler :hp1.Zoom um Faktor:ehp1. einen festen Vergrî·erungsfaktor
auswÑhlen.
:artwork name='print3.bmp'.
:p.Klicken Sie auf :hp1.Drucken:ehp1. um den Druckvorgang zu starten,
:hp1.Eigenschaften:ehp1. um Druckeneinstellungen zu verÑndern und
:hp1.Abbrechen:ehp1. um zum Stammbaum zurÅckzukehren.
:artwork name='print4.bmp'.


.* ------------------- winRexx ------------------------------.
:h1 res=&ID_NRexxDialog. id=winRexx.Rexxdialog
:i1.Rexxdialog
:p.In diesem Dialog kînnen Sie ein Rexx-Skript auswÑhlen.
:artwork name='rexx1.bmp'.
:p.Es werden alle Rexx-Skripte (*.ftx) mit Autor und einer kurzen
Beschreibung angezeigt, die sich im aktuellen Verzeichnis befinden.
:artwork name='rexx2.bmp'.
:p.Sie kînnen das angezeigt Skript :hp1.Starten:ehp1. oder den
Vorgang :hp1.Abbrechen:ehp1..
Nach der Auswahl des Buttons :hp1.Merken:ehp1. erscheint das
Skript im RexxmenÅ und kann dort direkt ausgewÑhlt werden.
:p.FamilyTree hat momentan folgende Skripte:
:ol compact.
:li.Alphabetic List (ABC-List.ftx) von :link reftype=hd refid=People.Nils Meier:elink.
.br
Dieses Skrtip zeigt alle Personen in einer alphabetischen Liste.
:li.Anniversaries of Death (AnnDeath.ftx) von :link reftype=hd refid=People.Nils Meier:elink.
.br
Dieses Skript zeigt die Todestage, sortiert nach Monat+Tag.
:li.List Birthdays (Birthday.ftx) von :link reftype=hd refid=People.Nils Meier:elink.
.br
Dieses Skript zeigt Geburtstage, sortiert nach Monat+Tag.
:li.Check Consistency (Check.ftx) von :link reftype=hd refid=People.Peter Gervai:elink.
.br
Diese Skript ÅberprÅft den aktullen Baum und untersucht ihn
nach Ungereimtheiten.
:li.List Descendants (Descends.ftx) von :link reftype=hd refid=People.Peter Gervai:elink.
.br
Dieses Skript zeigt die Nachfahren der aktuellen Person.
:li.Export Gedcom (ExGedcom.ftx) von :link reftype=hd refid=People.Nils Meier:elink.
.br
Dieses Skript exportiert den aktuellen Baum zum GEDCOM-Format.
GEDCOM ist DER Standard fÅr Ahnenforschungsdaten und daher weit verbreitet.
:li.Full Dump (FullDump.ftx) von :link reftype=hd refid=People.Peter Gervai:elink.
.br
Dieses Skript gibt alle Informationen des Baumes durch Semikolons getrennt
aus, so da· Sie diese z.B. in eine Tabellenkalkulation Åbernehmen kînnen.
:li.Import Gedcom (ImGedcom.ftx) von :link reftype=hd refid=People.Nils Meier:elink.
.br
Dieses Skript importiert eine GEDCOM-Datei (siehe oben Export).
:li.Continue Import (ImContue.ftx) von :link reftype=hd refid=People.Nils Meier:elink.
.br
Dieses Skript setzt einen Import fort, wenn beim letzten mal Personen (und Familien)
Åbrig geblieben sind. Dies kann dann passieren, wenn importierte Daten keinen
zusammenhÑngenden Baum ergeben. Dann werden Sie gefragt, ob Sie die Personen
behalten mîchten, die nicht mit dem Ursprung verwandt sind. Dieses Skript lÑ·t Sie
in diesem Fall einen separaten Baum erstellen.
:li.Longevity Report (Lngevity.ftx) von :link reftype=hd refid=People.Nils Meier:elink.
.br
Dieses Skript zeigt statistische Information Åber das Lebensalter der Personen im Baum.
:li.Report of a Person (Person.ftx) von :link reftype=hd refid=People.Nils Meier:elink.
.br
Dieses Skript zeigt die Informationen der aktullen Person.
:li.List Weddings (Weddings.ftx) von :link reftype=hd refid=People.Nils Meier:elink.
.br
Dieses Skript zeigt die Hochzeitstage, sortier nach Monat + Tag.
:eol.

.* ------------------- winRexxOutput --------------------------.
:h1 res=&ID_NRexxOutput. id=winRexxOut.Rexxoutput
:i1.Rexxoutput
:p.Die Ausgabe eines Rexx-Skripts wird in diesem Fenster gezeigt.
Sie kînnen die Operation :hp1.Abbrechen:ehp1., das Fenster durch
:hp1.OK:ehp1. schlie·en und die Ausgabe in eine Datei :hp1.Speichern:ehp1.

.* ------------------- Rexxing --------------------------.
:h1 id=rexxing.Rexx Programmieren
:i1.Rexx Programmieren
:p.FamilyTree kann in seinem Kontext Rexx-Skripte ausfÅhren,
um verschieden Aufgaben durchzufÅhren. Ein Skript kann Berichte
erstellen, Daten manipulieren und FamilyTree Informationen
importieren und exportieren.
:p.Sie mÅssen eine eigene Rexx-Datei (*.ftx) erstellen,
wenn Sie eigene Routinen schreiben mîchten. Der Kopf
des Skripts sollte so aussehen:

:font facename=VIO size=9x6.:xmp.
/*
   Family Tree Rexx Script FTX
   Copyright (C) 1996 by <Author's name>

   <
   English&colon.    Description in english   &colon.English
   Deutsch&colon.    Description in german    &colon.Deutsch
   Nederlands&colon. Description in dutch     &colon.Nederlands
   Francais&colon.   Description in french    &colon.Francais
   >

   Long Name is <
                 English&colon.    Long name in english &colon.English
                 Deutsch&colon.    Long name in german  &colon.Deutsch
                 Nederlands&colon. Long name in dutch   &colon.Nederlands
                 Francais&colon.   Long name in french  &colon.Francais
                >
*/
:exmp.:font facename=default size=0x0.

:p.Der Name des Authors (zwischen <>) und die Berschreibug (zwischen <>)
wird in dem Rexx-Auswahldialog angezeigt.
:p.Ein Rexx-Skript kann die Daten aus dem aktuellen Stammbaum
mit verschiedenen Funktion manipulieren und abfragen. Immer eine Mensch
und eine Familie ist ausgewÑhlt. Sie kînnen entweder die Auswahl eines Menschen
oder einer Familie durch das Bewegen von einem zum anderen Ñndern, oder
Daten mit den Datenfunktionen abfragen/Ñndern.
Bitte benutzen Sie die vorhandenen Skripte als Beispiel fÅr ein eigenes
Skript und schicken Sie dem Author eine Kopie Ihres Skriptes, falls es
auch fÅr andere Benutzer interessant ist.

:p.:hp2.The following functions let you query program settings: :ehp2.
:font facename='System VIO' size=9x6. :cgraphic.
 ⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
 ≥ FUNCTION NAME     ≥ ACTION                 ≥ PARAMETERS                  ≥
 √ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥
 ≥ getLanguage()     ≥ returns language       ≥ none                        ≥
 ≥                   ≥    'deutsch'/'english' ≥                             ≥
 ≥ selectFilename()  ≥ returns filename       ≥ 'Dialogtitle','*.*'         ≥
 ≥                   ≥    '' for cancel       ≥                             ≥
 ¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
:ecgraphic. :font facename=default size=0x0.


:p.:hp2.The following functions let you move through persons and families: :ehp2.
:font facename='System VIO' size=9x6. :cgraphic.
 ⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
 ≥ FUNCTION NAME     ≥ ACTION                 ≥ PARAMETERS                  ≥
 √ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥
 ≥ sortPersons()     ≥ sort persons by        ≥ 'N|n'ame                    ≥
 ≥                   ≥                        ≥ 'F|f'irst name              ≥
 ≥                   ≥                        ≥ 'B|b[D|M|Y]'irth date       ≥
 ≥                   ≥                        ≥ 'D|d[D|M|Y]'eath date       ≥
 ≥                   ≥                        ≥ 'L|l[D|M|Y]'ifetime         ≥
 ≥                   ≥                        ≥ 'P|p'ersons ID              ≥
 ≥                   ≥                        ≥ - Repeat via ','            ≥
 ≥                   ≥                        ≥ - 'A'scending/'d'escending  ≥
 ≥                   ≥                        ≥ - [Day,Month,Year]          ≥
 ≥ sortFamilies()    ≥ sort families by       ≥   'M|m[D|M|Y]'arriage date  ≥
 ≥                   ≥                        ≥ - see above                 ≥
 √ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥
 ≥ selectPerson()    ≥ selects a person       ≥ 'F'irst                     ≥
 ≥                   ≥ returns '1' if done    ≥ 'L'ast                      ≥
 ≥                   ≥         '0' otherwise  ≥ 'P'revious                  ≥
 ≥                   ≥                        ≥ 'N'ext                      ≥
 ≥                   ≥                        ≥ 'R'emembered                ≥
 ≥                   ≥                        ≥ 'O'rigin                    ≥
 ≥                   ≥                        ≥*'f'ather of current family  ≥
 ≥                   ≥                        ≥*'m'other of current family  ≥
 ≥                   ≥                        ≥*'p'artner in current family ≥
 ≥                   ≥                        ≥*'1|2|3..' child in family   ≥
 ≥                   ≥                        ≥ - * results in error, when  ≥
 ≥                   ≥                        ≥ actual family was imported  ≥
 ≥ selectFamily()    ≥ selects a family       ≥ 'F'irst                     ≥
 ≥                   ≥ returns '1' if done    ≥ 'L'ast                      ≥
 ≥                   ≥         '0' otherwise  ≥ 'P'revious                  ≥
 ≥                   ≥                        ≥ 'N'ext                      ≥
 ≥                   ≥                        ≥*'p'arental fam of person    ≥
 ≥                   ≥                        ≥*'1|2|..' fam of act. person ≥
 ≥                   ≥                        ≥ - * results in error, when  ≥
 ≥                   ≥                        ≥ actual person was imported  ≥
 √ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥
 ≥ doStack()         ≥ stack operation        ≥*'P(P|F)'ush on stack        ≥
 ≥                   ≥                        ≥ 'p(P|F)'op  from stack      ≥
 ≥                   ≥                        ≥ 'D(P|F)'rop from stack      ≥
 ≥                   ≥                        ≥*'S(P|F)'wap with stack      ≥
 ≥                   ≥                        ≥ - [P]erson|[F]amily         ≥
 ≥                   ≥                        ≥ - * results in error, when  ≥
 ≥                   ≥                        ≥ you try to push or swap an  ≥
 ≥                   ≥                        ≥ imported Person or Family   ≥
 ¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
:ecgraphic. :font facename=default size=0x0.
:p.Example: Sort all persons by birth date (ascending)
:xmp. rc=sortPersons('B') :exmp.
:p.Example: Sort all persons by their birth month,day (descending)
:xmp. rc=sortPersons('bm,bd') :exmp.
:p.Example: Sort all families by marriage date (ascending)
:xmp. rc=sortFamilies('M') :exmp.
:p.Example: Select first man in list
:xmp. rc=selectPerson('F') :exmp.
:p.Example: Select 2nd child of current family
:xmp. rc=selectPerson('2') :exmp.
:p.Example: Select 1st family of current person
:xmp. rc=selectFamily('1') :exmp.

:p.:hp2.The following functions refer to the data of the actual person: :ehp2.
:font facename='System VIO' size=9x6. :cgraphic.
 ⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
 ≥ FUNCTION NAME     ≥ ACTION                 ≥ PARAMETERS                  ≥
 √ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥
 ≥ getPID()          ≥ returns ID             ≥ none                        ≥
 ≥ getName()         ≥ returns name           ≥ none                        ≥
 ≥ getFirstName()    ≥ returns first name     ≥ none                        ≥
 ≥ getSex()          ≥ returns sex 0|1|2      ≥ none                        ≥
 ≥ getBirthDate()    ≥ returns birth date     ≥ none (full)                 ≥
 ≥                   ≥                        ≥ |'D'ay                      ≥
 ≥                   ≥                        ≥ |'M'onth                    ≥
 ≥                   ≥                        ≥ |'m'onth name               ≥
 ≥                   ≥                        ≥ |'Y'ear                     ≥
 ≥                   ≥                        ≥ |'d'ays (since 00.00.0000)  ≥
 ≥                   ≥                        ≥ |'c'omplete ? (1/0)         ≥
 ≥                   ≥                        ≥ | m'O'difier (see setDate)  ≥
 ≥ getBirthPlace()   ≥ returns birth place    ≥ none                        ≥
 ≥ getDeathDate()    ≥ returns death date     ≥ none (full date)            ≥
 ≥                   ≥                        ≥ |'D'ay                      ≥
 ≥                   ≥                        ≥ |'M'onth                    ≥
 ≥                   ≥                        ≥ |'m'onth name               ≥
 ≥                   ≥                        ≥ |'Y'ear                     ≥
 ≥                   ≥                        ≥ |'d'ays (since 00.00.0000)  ≥
 ≥                   ≥                        ≥ |'c'omplete ? (1/0)         ≥
 ≥                   ≥                        ≥ | m'O'difier (see setDate)  ≥
 ≥ getDeathPlace()   ≥ returns death place    ≥ none                        ≥
 ≥ getOccupation()   ≥ returns occupation     ≥ none                        ≥
 ≥ getAddress()      ≥ returns address        ≥ none                        ≥
 ≥ getMemo()         ≥ ret. memo or '' if n/a ≥ none (all)                  ≥
 ≥                   ≥                        ≥ |line '1','2','3',...       ≥
 ≥ getPicture()      ≥ returns picture path   ≥ none                        ≥
 ≥ getFile()         ≥ ret. file attachment   ≥ '1','2','3',...             ≥
 ≥ getUserField()    ≥ ret. user field        ≥ '1','2','3',...             ≥
 ≥ getUserFieldName()≥ ret. user field name   ≥ '1','2','3',...             ≥
 ≥ setPID()          ≥ sets ID                ≥ 'id'                        ≥
 ≥                   ≥                        ≥ - results in error, when    ≥
 ≥                   ≥                        ≥ actual is not an imported   ≥
 ≥                   ≥                        ≥ or id=0 or id is not num    ≥
 ≥ setName()         ≥ sets name              ≥ 'name'                      ≥
 ≥ setFirstName()    ≥ sets first name        ≥ 'first name'                ≥
 ≥ setSex()          ≥ sets sex               ≥ '0'None|'1'Male|'2'Female   ≥
 ≥ setBirthDate()    ≥ sets birth date        ≥ '[m,]dd.mm.yyyy'            ≥
 ≥                   ≥                        ≥ Modifier m=0 None           ≥
 ≥                   ≥                        ≥          m=1 About          ≥
 ≥                   ≥                        ≥          m=2 After          ≥
 ≥                   ≥                        ≥          m=3 Before         ≥
 ≥                   ≥                        ≥          m=4 Estimated      ≥
 ≥ setBirthPlace()   ≥ sets birth place       ≥ 'place'                     ≥
 ≥ setDeathDate()    ≥ sets death date        ≥ '[m,]dd.mm.yyyy'            ≥
 ≥                   ≥                        ≥ Modifier see above          ≥
 ≥ setDeathPlace()   ≥ sets death place       ≥ 'place'                     ≥
 ≥ setOccupation()   ≥ sets occupation        ≥ 'occupation'                ≥
 ≥ setAddress()      ≥ sets address           ≥ 'address'                   ≥
 ≥ setMemo()         ≥ sets memo              ≥ 'memo'                      ≥
 ≥ setPicture()      ≥ sets picture path      ≥ 'path'                      ≥
 ≥ addFile()         ≥ adds file attachment   ≥ 'file'                      ≥
 ¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
:ecgraphic. :font facename=default size=0x0.
:p.Example: Get name of actual person
:xmp. name=getName() :exmp.
:p.Example: Get birth month of actual person
:xmp. date=getBirthDate('M') :exmp.
:p.Example: Get 2nd line of the memo-field of the actual person
:xmp. memo=getMemo('2') :exmp.

:p.:hp2.The following functions refer to the data of the actual family: :ehp2.
:font facename='System VIO' size=9x6. :cgraphic.
 ⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
 ≥ FUNCTION NAME     ≥ ACTION                 ≥ PARAMETERS                  ≥
 √ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥
 ≥ getFID()          ≥ returns ID             ≥ none                        ≥
 ≥ getMarriageDate() ≥ returns marriage date  ≥ none (full date)            ≥
 ≥                   ≥                        ≥ |'D'ay                      ≥
 ≥                   ≥                        ≥ |'M'onth                    ≥
 ≥                   ≥                        ≥ |'m'onth name               ≥
 ≥                   ≥                        ≥ |'Y'ear                     ≥
 ≥                   ≥                        ≥ |'d'ays (since 00.00.0000)  ≥
 ≥                   ≥                        ≥ |'c'omplete ? (1/0)         ≥
 ≥                   ≥                        ≥ | m'O'difier (see setDate)  ≥
 ≥ getMarriagePlace()≥ returns marriage place ≥ none                        ≥
 ≥ getDivorceDate()  ≥ returns divorce date   ≥ none (full date)            ≥
 ≥                   ≥                        ≥ |'D'ay                      ≥
 ≥                   ≥                        ≥ |'M'onth                    ≥
 ≥                   ≥                        ≥ |'m'onth name               ≥
 ≥                   ≥                        ≥ |'Y'ear                     ≥
 ≥                   ≥                        ≥ |'d'ays (since 00.00.0000)  ≥
 ≥                   ≥                        ≥ |'c'omplete ? (1/0)         ≥
 ≥                   ≥                        ≥ | m'O'difier (see setDate)  ≥
 ≥ setFID()          ≥ sets ID                ≥ 'id'                        ≥
 ≥                   ≥                        ≥ - results in error, when    ≥
 ≥                   ≥                        ≥ actual is not an imported   ≥
 ≥                   ≥                        ≥ or id=0 or id is not num    ≥
 ≥ setMarriageDate() ≥ sets marriage date     ≥ '[m],dd.mm.yyyy'            ≥
 ≥                   ≥                        ≥ Modifier m=0 None           ≥
 ≥                   ≥                        ≥          m=1 About          ≥
 ≥                   ≥                        ≥          m=2 After          ≥
 ≥                   ≥                        ≥          m=3 Before         ≥
 ≥                   ≥                        ≥          m=4 Estimated      ≥
 ≥ setMarriagePlace()≥ sets marriage place    ≥ 'place'                     ≥
 ≥ setDivorceDate()  ≥ sets divorce date      ≥ '[m,]dd.mm.yyyy.'           ≥
 ≥                   ≥                        ≥ Modifier see above          ≥
 ¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
:ecgraphic. :font facename=default size=0x0.
:p.Example: Get divorce date of current family
:xmp. date=getDivorceDate() :exmp.
:p.Example: Get marriage year of current family
:xmp. date=getMarriageDate('Y') :exmp.

:p.:hp2.The following functions let you import new persons and families: :ehp2.
:font facename='System VIO' size=9x6. :cgraphic.
 ⁄ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¬ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒø
 ≥ FUNCTION NAME     ≥ ACTION                 ≥ PARAMETERS                  ≥
 √ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ≈ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¥
 ≥ importPerson()    ≥ create a new Person    ≥ none                        ≥
 ≥ importFamily()    ≥ create a new Family    ≥ none                        ≥
 ≥ importAddPartner()≥ add ID of Partner to   ≥ 'id' of one Partner of the  ≥
 ≥                   ≥ imported family        ≥ last imported! Family       ≥
 ≥ importAddChild()  ≥ add ID of Child to     ≥ 'id' of one Child of the    ≥
 ≥                   ≥ imported family        ≥ last imported! Family       ≥
 ≥ importDone()      ≥ trigger import routine ≥ none                        ≥
 ≥                   ≥ tree is resetted and   ≥ objects with lost ID's and  ≥
 ≥                   ≥ as much information as ≥ Families that build loops   ≥
 ≥                   ≥ possible imported      ≥ are not imported            ≥
 ¿ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒ¡ƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒƒŸ
:ecgraphic. :font facename=default size=0x0.
:p.Example: Import a Person
:xmp. ok=importPerson() :exmp.
:p.Example: Set ID of one Partners of the last imported family to 3
:xmp. ok=importAddPartner(3) :exmp.

.* ----------------- FileMenu -------------------------------------.
:h1 id=menuFile.DateimenÅ
:i1 id=menuFile.DateimenÅ
:p.Das DateimenÅ ermîglicht es, folgende Aktionen durchzufÅhren. Einen Stammbaum
:ol compact.
:li.:link reftype=hd refid=treeNew.neu anlegen:elink.,
:li.:link reftype=hd refid=treeLoad.einladen:elink.,
:li.:link reftype=hd refid=treeSave.abspeichern:elink.,
:li.:link reftype=hd refid=treeSaveAs.mit Namen abspeichern:elink.,
:li.:link reftype=hd refid=treePrint.drucken:elink.,
:li.:link reftype=hd refid=treeClose.schlie·en:elink. und das Programm beenden.
:eol.

:h2 res=&MI_FileNew. id=treeNew.Neuer Stammbaum
:i2 refid=menuFile.Neu
:p.Mit :hp1.Daten|Neu:ehp1. kann man mit einen neuen Stammbaum anfangen.

:h2 res=&MI_FileOpen. id=treeLoad.Stammbaum laden
:i2 refid=menuFile.Laden
:p.Mit :hp1.Daten|Laden:ehp1. kann man einen bestehenden Stammbaum einladen.

:h2 res=&MI_FileSave. id=treeSave.Stammbaum speichern
:i2 refid=menuFile.Speichern
:p.Mit :hp1.Daten|Speichern:ehp1. kann man einen bearbeiteten Stammbaum abspeichern,
der vorher eingeladen oder mit :link reftype=hd refid=treeSaveAs.Speichern unter:elink.
abgespeichert worden ist.

:h2 res=&MI_FileSaveAs. id=treeSaveAs.Stammbaum speichern unter
:i2 refid=menuFile.Speichern unter
:p.Mit :hp1.Daten|Speichern Unter:ehp1. kann man einen bearbeiteten Stammbaum abspeichern.

:h2 res=&MI_FileClose. id=treeClose.Stammbaum schlie·en
:i2 refid=menuFile.Schlie·en
:p.Mit :hp1.Daten|Schlie·en:ehp1. wird der Stammbaum geschlossen und das Programm
beendet.

:h2 res=&MI_FilePrint. id=treePrint.Stammbaum drucken
:i2 refid=menuPrint.Drucken
:p.Mit :hp1.Daten|Drucken:ehp1. wird der Stammbaum gedruckt.

.* ----------------- menuMankind -------------------------------------.
:h1 id=menuMankind.AnsichtmenÅ
:i1 id=menuMankind.AnsichtmeÅ
:p.Das :hp1.AnsichtmenÅ:ehp1. wird entweder Åber das HauptmenÅ am oberen Rand
des Hauptfensters oder per rechtem Mausklick auf eine freie Stelle im Stammbaum
aktiviert.
:artwork name='menuMankind.bmp'.
Folgende Optionen stehen zur VerfÅgung:
:ol compact.
:li.:link reftype=hd refid=menuMankindAncestors.Vorfahren:elink.,
:li.:link reftype=hd refid=menuMankindDescendants.Nachfahren:elink.,
:li.:link reftype=hd refid=menuMankindSiblings.Geschwister:elink.
:lp.
:li.:link reftype=hd refid=menuMankindZoomIn.Vergrî·ern:elink.
:li.:link reftype=hd refid=menuMankindZoomOut.Verkleinern:elink.
:lp.
:li.:link reftype=hd refid=menuMankindVert.Vertikal:elink.
:li.:link reftype=hd refid=menuMankindHori.Horizontal:elink.
:lp.
:li.:link reftype=hd refid=menuMankindList.Liste:elink.
:eol.

:h2 res=&MI_MankindAncestors. id=menuMankindAncestors.Vorfahren
:i2 refid=menuMankind.Vorfahren
:p.Durch die Wahl von :hp1.Ansicht|Vorfahren:ehp1. erscheint ein
Eingabefenster, in dem Sie angeben kînnen, wieviele Generationen
von Vorfahren des "Ursprungs" sichtbar sein sollen. Wenn Sie also
keine Vorfahren sehen mîchten, geben Sie einfach eine 0 ein. Wenn
Sie das Eingabefeld leer lassen, sehen Sie alle Vorfahren.

:h2 res=&MI_MankindDescendants. id=menuMankindDescendants.Nachfahren
:i2 refid=menuMankind.Nachfahren
:p.Durch die Wahl von :hp1.Ansicht|Nachfahren:ehp1. erscheint ein
Eingabefenster, in dem Sie angeben kînnen, wieviele Generationen
von Nachfahren des "Ursprungs" sichtbar sein sollen. Wenn Sie also
keine Nachfahren sehen mîchten, geben Sie einfach eine 0 ein. Wenn
Sie das Eingabefeld leer lassen, sehen Sie alle Nachfahren.

:h2 res=&MI_MankindSiblings. id=menuMankindSiblings.Geschwister
:i2 refid=menuMankind.Geschwister
:p.Durch die Wahl von :hp1.Ansicht|Geschwister:ehp1. werden alle Geschwister
und deren Nachfahren des "Ursprungs" gezeigt (wenn die Eltern sichtbar sind).
Durch eine zweite Auswahl, werden wieder nur die Nachfahren des "Ursprungs"
gezeigt.

:h2 res=&MI_MankindZoomIn. id=menuMankindZoomIn.Vergrî·ern
:i2 refid=menuMankind.Vergrî·ern
:p.Mit der Auswahl :hp1.Ansicht|Vergrî·ern:ehp1., kînnen
Sie die Zoom-Rate bis zum Maximum von 1 vergrî·ern.

:h2 res=&MI_MankindZoomOut. id=menuMankindZoomOut.Verkleinern
:i2 refid=menuMankind.Verkleinern
:p.Mit der Auswahl :hp1.View|Verkleinern:ehp1., kînnen
Sie die Zoom-Rate bis zum Minimum von 0.1 verkleinern.

:h2 res=&MI_MankindVert. id=menuMankindVert.Vertikal
:i2 refid=menuMankind.Vertikal
:p.Durch die Wahl von :hp1.Ansicht|Vertikal:ehp1. wird der Stammbaum senkrecht
angezeigt.

:h2 res=&MI_MankindHori. id=menuMankindHori.Horizontal
:i2 refid=menuMankind.Horizontal
:p.Durch die Wahl von :hp1.Ansicht|Horizontal:ehp1. wird der Stammbaum quer
angezeigt.

:h2 res=&MI_MankindList. id=menuMankindList.Liste
:i2 refid=menuMankind.Liste
:p.Durch die Wahl von :hp1.Ansicht|Liste:ehp1. wird ein
:link reftype=hd refid=winList.Listenfenster:elink. mit
den alphabetisch sortierten Namen aller Menschen im Stammbaum gezeigt.
:p.Ist das Listenfenster schon geîffnet, dann erscheint der MenÅpunkt abgehakt
und eine erneute Auswahl schlie·t das Fenster.


.* ----------------- Man -----------------------------------------.
:h1 res=&MI_ManDel. id=menuMan.Mensch
:i1 id=menuMan.Mensch
:p.Das KontextmenÅ eines Menschen erlaubt folgende Aktionen
(ôffnen Sie es per rechtem Mausklick auf einen Menschen im Stammbaum):
:artwork name='menuMan.bmp'.
:ol compact.
:li.:link reftype=hd refid=menuManCenter.Zentrieren:elink.,
:li.:link reftype=hd refid=menuManEdit.Editieren:elink.,
:li.:link reftype=hd refid=menuManOrigin."Ursprung" bestimmen:elink.
:lp.
:li.:link reftype=hd refid=menuManDelPartner.Lîschen des Partners:elink.
:li.:link reftype=hd refid=menuManDelChilds.Lîschen der Kinder:elink.
:li.:link reftype=hd refid=menuManDelParents.Lîschen der Eltern:elink.
:li.:link reftype=hd refid=menuManDelThis.Lîschen des "Aktuellen":elink.
:lp.
:li.:link reftype=hd refid=menuManChild.Kind hinzufÅgen:elink.
:li.:link reftype=hd refid=menuManParents.Eltern hinzufÅgen:elink.
:li.:link reftype=hd refid=menuManPartner.Partner hinzufÅgen:elink.
:eol.

:h2 res=&MI_ManCenter. id=menuManCenter.Zentrieren
:i2 refid=menuMan.Zentrieren
:p.Durch die Wahl von :hp1.Zentrieren:ehp1. wird der Stammbaum so im Hauptfenster
positioniert, da· der "Aktuelle" zentriert erscheint
(Noch nicht implementiert).

:h2 res=&MI_ManEdit. id=menuManEdit.Editieren
:i2 refid=menuMan.Editieren
:p.Durch die Wahl von :hp1.Editieren:ehp1. wird ein
:link reftype=hd refid=winEdit.Editierfenster:elink.
geîffnet, zum éndern der Eigenschaften eines Menschen.
:p.Ist das Editierfenster schon geîffnet, dann erscheint der MenÅpunkt abgehakt
und eine erneute Auswahl schlie·t es.

:h2 res=&MI_ManOrigin. id=menuManOrigin.Ursprung
:i2 refid=menuMan.Ursprung
:p.Durch die Wahl von :hp1.Urspung:ehp1. wird der "Aktuelle"
zum "Ursprung" des Stammbaumes.

:h2 res=&MI_ManDelPartner. id=menuManDelPartner.Partner lîschen
:i2 refid=menuMan.Partner lîschen
:p.Durch die Wahl von :hp1.Lîschen|Partner:ehp1. wird der aus dem
UntermenÅ ausgewÑhlt Partner und die mit Ihm gezeugten Kinder gelîscht.

:h2 res=&MI_ManDelChilds. id=menuManDelChilds.Kinder lîschen
:i2 refid=menuMan.Kinder lîschen
:p.Durch die Wahl von :hp1.Lîschen|Kinder mit:ehp1. werden die Kinder
des "Aktuellen" gelîscht. Wenn der "Aktuelle" mehrere Partner hat mu·
der Partner ausgewÑhlt werden, dessen gemeinsame Kinder gelîscht werden
sollen.
:warning text='Vorsicht:'.
Alle Kinder, deren Nachfahren und Vorfahren (ohne den "Aktuellen")
werden gelîscht !
:ewarning.

:h2 res=&MI_ManDelParents. id=menuManDelParents.Eltern lîschen
:i2 refid=menuMan.Eltern lîschen
:p.Durch die Wahl von :hp1.Lîschen|Eltern:ehp1. werden die Eltern
des "Aktuellen" gelîscht.
:warning text='Vorsicht:'.
Die Eltern, deren Vorfahren und Nachfahren (au·er dem
"Aktuellen") werden gelîscht !
:ewarning.

:h2 res=&MI_ManDelThis. id=menuManDelThis.Person lîschen
:i2 refid=menuMan.Person lîschen
:p.Durch die Wahl von :hp1.Lîschen|Diesen:ehp1. wird der "Aktuelle" gelîscht.
:p.Alle Personen, die nach dem Lîschen des "Aktuellen" nicht mehr mit dem
"Ursprung" verwandt sind, werden auch gelîscht.

:h2 res=&MI_ManChild. id=menuManChild.Kind hinzufÅgen
:i2 refid=menuMan.Kind hinzufÅgen
:p.Durch die Wahl von :hp1.Neues Kind mit:ehp1. wird zum "Aktuellen"
ein Kind hinzugefÅgt. Wenn der "Aktuelle" mehrere Partner hat, mu· der
Partner ausgewÑhlt werden, zu dem das Kind gehîrt.
StandardmÑ·ig wird bei Auswahl ein
:link reftype=hd refid=menuManChildNew.neues Kind erzeugt:elink.,
Sie kînnen aber auch eine
:link reftype=hd refid=menuManChildRemembered.gemerkte Person als Kind:elink.
hinzufÅgen.
:p.Der MenÅpunk is nicht verfÅgbar, wenn der "Aktuelle" keinen Partner
oder die maximal erlaubte Zahl an Kinder hat.

:h2 res=&MI_ManChildNew. id=menuManChildNew.Kind hinzufÅgen (Neu)
:i2 refid=menuMan.Kind hinzufÅgen (Neu)
:p.Durch die Wahl von :hp1.Neues Kind mit|Partner|Neu:ehp1. wird ein neues Kind
erzeugt. Sie kînnen auch eine
:link reftype=hd refid=menuManChildRemembered.gemerkte Person als Kind:elink.
hinzufÅgen.

:h2 res=&MI_ManChildRemembered. id=menuManChildRemembered.Kind hinzufÅgen (Gemerkter)
:i2 refid=menuMan.Kind hinzufÅgen (Gemerkter)
:p.Durch die Wahl von :hp1.Neues Kind mit|Partner|Gemerkter:ehp1. wird die
:link reftype=hd refid=menuManRemember.gemerkte:elink. Person als Kind hinzugefÅgt.
Sie kînnen auch ein :link reftype=hd refid=menuManChildNew.neues Kind erzeugen:elink..

:h2 res=&MI_ManParents. id=menuManParents.Eltern hinzufÅgen
:i2 refid=menuMan.Eltern hinzufÅgen
:p.Durch die Wahl von :hp1.Neue Eltern:ehp1. werden zum "Aktuellen"
Eltern hinzugefÅgt.
:p.Der MenÅpunkt is nicht verfÅgbar, wenn der "Aktuelle" schon Eltern hat.

:h2 res=&MI_ManPartner. id=menuManPartner.Partner hinzufÅgen
:i2 refid=menuMan.Partner hinzufÅgen
:p.Durch die Wahl von :hp1.Neuer Partner:ehp1. wird dem "Aktuellen"
ein Partner hinzugefÅgt.
:p.Dieser MenÅpunkt ist ein KonditionalmenÅ. Wenn Sie vorher einen Menschen
:link reftype=hd refid=menuManRemember.gemerkt:elink. haben, kînnen Sie dem
"Aktuellen" einen neuen Partner oder die gemerkte Person hinzufÅgen.

:h2 res=&MI_ManPartnerNew. id=menuManPartnerNew.Partner hinzufÅgen (Neu)
:i2 refid=menuMan.Partner hinzufÅgen (Neu)
:p.Durch die Wahl von :hp1.Neuer Partner|Neu:ehp1. bekommt der "Aktuelle"
einen neuen Partner.
Sie kînnen auch einen
:link reftype=hd refid=menuManPartnerRemembered.gemerkten Partner hinzufÅgen:elink..

:h2 res=&MI_ManPartnerRemembered. id=menuManPartnerRemembered.Partner hinzufÅgen (Gemerkter)
:i2 refid=menuMan.Partner hinzufÅgen (Gemerkter)
:p.Wenn Sie :hp1.Neuer Partner|Gemerkter:ehp1. auswÑhlen, wird dem "Aktuellen" die
vorher :link reftype=hd refid=menuManRemember.gemerkte:elink. Person hinzugefÅgt.
Sie kînnen ihm auch
:link reftype=hd refid=menuManPartnerNew.einen neuen Partner geben:elink..
:p.Sie kînnen nur eine gemerkte Person hinzufÅgen, wenn Sie nicht schon
mit dem "Aktuellen" verheiratet ist und der "Aktuelle" nicht die
gemerkte Person ist.

:h2 res=&MI_ManRemember. id=menuManRemember.Merken
:i2 refid=menuMan.Merken
:p.Durch die Auswahl von :hp1.Merken:ehp1., wird der "Aktuelle" gemerkt, so
da· Sie ihn einer anderen Person als Partner hinzufÅgen kînnen, die schon
im Baum ist. Au·erdem kînnen Sie diese gemerkter Person einer Familie als
Kind zuordnen.

.* ----------------- menuOptions -------------------------------------.
:h1 id=menuOptions.OptionsmenÅ
:i1 id=menuOptions.OptionsmenÅ
:p.Das :hp1.OptionsmenÅ:ehp1. liegt im HauptmenÅ am oberen
Rand des Hauptfensters. Wenn Sie eines seiner MenÅpunkte auswÑhlen,
kînnen Sie direkt zu eine Optionenseite des
:link reftype=hd refid=winOptions.Optionsdialog:elink.
springen.

Die folgenden Optionsseiten sind vorhanden:
:ol compact.
:li.:link reftype=hd refid=menuOptionsLayout.Layout:elink.,
:li.:link reftype=hd refid=menuOptionsDataAssistant.Datenassistent:elink.,
:li.:link reftype=hd refid=menuOptionsMiscellaneous.Verschiedenes:elink.
:li.:link reftype=hd refid=menuOptionsUserFields.Benutzerfelder:elink.
:eol.

:h2 res=&MI_OptionsLayout. id=menuOptionsLayout.Layout
:i2 refid=menuOptions.Layout
:p.Durch die Wahl von :hp1.Optionen|Layout:ehp1. springen
Sie direkt zur Layout-Seite des
:link reftype=hd refid=winOptions.Optionsdialog:elink..

:h2 res=&MI_OptionsDataAssistant. id=menuOptionsDataAssistant.Datenassistent
:i2 refid=menuOptions.Datenassistent
:p.Durch die Wahl von :hp1.Optionen|Datenassistent:ehp1. springen
Sie direkt zur Seite des :link reftype=hd refid=winOptions.Optionsdialog:elink.,
auf der Sie Datenassistentenparameter Ñndern kînnen.

:h2 res=&MI_OptionsMiscellaneous. id=menuOptionsMiscellaneous.Verschiedenes
:i2 refid=menuOptions.Verschiedenes
:p.Durch die Wahl von :hp1.Optionen|Verschiedenes:ehp1. springen
Sie direkt zur Seite des :link reftype=hd refid=winOptions.Optionsdialog:elink.,
auf der Sie verschiedene Einstellungen Ñndern kînnen.

:h2 res=&MI_OptionsUserFields. id=menuOptionsUserFields.Benutzerfelder
:i2 refid=menuOptions.Benutzerfelder
:p.Durch die Wahl von :hp1.Optionen|Benutzerfelder:ehp1. springen
Sie direkt zur Seite des :link reftype=hd refid=winOptions.Optionsdialog:elink.,
auf der Sie Benutzerfelder definieren kînnen.

.* ----------------- menuRexx -------------------------------------.
:h1 res=&MI_RexxStart. id=menuRexxStart.Rexx starten
:i1 id=menuRexxStart.Rexx starten
:p.Sie kînnen ein Rexx-Skript starten, indem Sie :hp1.Rexx|Starten:ehp1.
aus dem HauptmenÅ am oberen Rand des Hauptfensters auswÑhlen.
Es erscheint dann der
:link reftype=hd refid=winRexx.Rexx Dialog:elink.
zur nÑheren Auswahl.
:p.Gemerkte Skripte kînnen ohne Umweg direkt ausgewÑhlt werden.

.* ----------------- People ---------------------------------------.
:h1 id=people.Team FamilyTree
:i1.Team

Diese Personen haben etwas mit FamilyTree zu tun:

:sl.
:li.:lines.
:hp1.Verantworlich, das Ganze angefangen zu haben:ehp1.
Nils Meier (meier2@cs.uni-bonn.de)
Birkenweg 27
53797 Lohmar
Germany / Europe
:elines.
:li.:lines.
:hp1.Mister Rexx:ehp1.
Peter "Grin" Gervai (grin@exabit.hu)
:elines.
:li.:lines.
:hp1.HollÑndische öbersetzung:ehp1.
Tjalco P. van der Mey (T.P.vd.Mey@net.hcc.nl)
Burg. Bloemersstraat 8
7271 DC Borculo
The Netherlands
Tel +31-545-273522
Fax +31-545-275108
:elines.
:li.:lines.
:hp1.Franzîsische öbersetzung:ehp1.
Francois Massonneau (island@worldnet.fr)
Operator of Island's BBS (use "FTREE" to get the latest version there):
Node 1 : +33-(0)251.397.478
Node 2 : +33-(0)251.395.251
Fidonet 2:326/2.0
V34+ (Up to 33600 bauds).
:elines.
:esl.


.* ----------------- Registration ---------------------------------.
:h1 res=&ID_NAboutDialog. id=register.Registrierung
:i1 id=register.Registrierung
:p.Family Tree ist :hp1.Shareware:ehp1.. Sie dÅrfen dieses Programm x Tage lang
testen und benutzen (:color fc=red.x hÑngt von Ihnen ab:color fc=default.).
Wenn sie den Autor in seinen BemÅhungen unterstÅtzen wollen, Family Tree
weiterzuentwickeln, registrieren Sie bitte Family Tree.

:p.Die RegistriergebÅhr betrÑgt 20 DM (US $ 15).
Sie bekommen einen Registriercode, den Sie in den Informationsdialog eintragen
mÅssen (erreichbar Åber den MenÅpunkt :hp1.Hilfe|öber:ehp1.).
Die Registrierung ist gÅltig fÅr alle Versionen 1.x und 2.x.
Sie erhalten au·erdem eine Nachricht, wenn eine neue Version von Family Tree
erscheint.
:p.Addieren Sie bitte 5 DM (US $ 5), wenn Sie die aktuelle Version auf Disk
zugeschickt bekommen wollen. Bitte teilen Sie mir mit, welches Format Sie
wÅnschen (3 1/2 oder 5 1/4).

:p.So kînnen Sie bezahlen :
:ol compact.
:li.öberweisung an
.br
    Nils Meier
.br
    Kontonummer 0516 075 130
.br
    Allgemeine Deutsche Direktbank AG
.br
    Bankleitzahl 500 105 17
.br
Bitte geben Sie "FTree Registrierung" und Ihren Namen auf der öberweisung an.
:li.Bar per Post an :link reftype=hd refid=People.Nils Meier:elink.
:li.Eurocheque per Post, zahlbar an :link reftype=hd refid=People.Nils Meier:elink.
:li.Registrierung durch BMT Micro in Wilmington, NC 28408, USA
.br
    Bitte entnehmen Sie der Textdatei Order.BMT die nîtigen Informationen.
.br
    (RegistriergebÅhr betrÑgt US $ 20)
:eol.

:p.Bitte senden Sie per Post oder E-Mail die folgende Informationen :
:ol compact.
:li.Name
:li.Adresse
:li.E-Mail Adresse
:li.Zahlungsweg
:ul compact.
:li.öberweisung
:li.Scheck (mit der Post)
:li.Bar (mit der Post)
:eul.
:li.Wohin der Registriercode geschickt werden soll
:ul compact.
:li.per Post an obige Adresse
:li.per E-Mail an obige Adresse
:eul.
:eol.

:p.:font facename=Helv size=24x24.Danke fÅr's Registrieren !:font facename=default size=0x0.

:euserdoc.
